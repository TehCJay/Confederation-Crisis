civil_war = {
	# A generic civil war triggered by a failed coup or purge
	name = CB_NAME_CIVIL_WAR
	war_name = WAR_NAME_CIVIL_WAR
	sprite = 3
	truce_days = 0
	hostile_against_others = no
	is_permanent = yes
	is_revolt_cb = no
	can_ask_to_join_war = yes
	can_call_vassals = yes

	press_claim = yes

	can_use = {
		# Triggered by event only
		OR = {
			ROOT = { has_character_flag = flag_launching_civil_war }
			FROM = { has_character_flag = flag_launching_civil_war }
		}
	}

	can_use_title = {
		OR = {
			is_primary_holder_title = yes
			ROOT = { plot_target_title = { title = PREVPREV } }
		}
	}

	on_add = {
		log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB civil_war."
		# Remove initiating flags
		ROOT = { clr_character_flag = flag_launching_civil_war }
		FROM = { clr_character_flag = flag_launching_civil_war }

		# If FROM and ROOT share the same ideology, change that ideology's moral authority.
		if = {
			limit = {
				FROM = { primary_title = { tier = EMPEROR } }
				FROM = { religion = ROOT }
			}
			FROM = { religion_authority = { modifier = allowed_civil_war_empire } }
		}
		if = {
			limit = {
				FROM = { primary_title = { tier = KING } }
				FROM = { religion = ROOT }
			}
			FROM = { religion_authority = { modifier = allowed_civil_war_kingdom } }
		}
		if = {
			limit = {
				FROM = { primary_title = { tier = DUKE } }
				FROM = { religion = ROOT }
			}
			FROM = { religion_authority = { modifier = allowed_civil_war_duchy } }
		}
		if = {
			limit = {
				FROM = { primary_title = { tier = COUNT } }
				FROM = { religion = ROOT }
			}
			FROM = { religion_authority = { modifier = allowed_civil_war_county } }
		}

		# Downgrade FROM's public order
		#FROM = {
		#	any_demesne_title = { limit = { has_law = public_order_1 } }
		#	add_law = public_order_0
		#}
	}

	on_success = {
		log = "[Root.GetBestName] won the civil_war war against [From.GetBestName]."
		# The rebels have won!
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}

		# Determine incoming government type
		if = {
			limit = {
				# These should be preserved
				ROOT = {
					NOT = { government = merchant_republic_government }
					NOT = { government = pirate_kingdom }
					NOT = { government = pirate_republic }
					NOT = { government = hivemind_government }
				}
			}
			# Oterhwise, the incoming government should use ROOT's power base and FROM's legitimacy type
			
			if = {
				limit = { 
					ROOT = {
						AND = {
							religion = neo_feudal
							capital_holding = { holding_type = castle }
						}
					}
				}
				ROOT = { set_government_type = neofeudal_government }
			}
			if = {
				limit = { ROOT = { capital_holding = { holding_type = city } } }
				ROOT = { set_government_type = pc_civil_government }
			}
			if = {
				limit = { ROOT = { capital_holding = { holding_type = castle } } }
				ROOT = { set_government_type = military_government }
			}
			if = {
				limit = { ROOT = { capital_holding = { holding_type = temple } } }
				ROOT = { set_government_type = pc_rectorial_government }
			}
			if = {
				limit = { 
					ROOT = {
						AND = {
							religion_ = outlaw_group
							capital_holding = { holding_type = castle }
						}
					}
				}
				ROOT = { set_government_type = pirate_kingdom }
			}
			if = {
				limit = { 
					ROOT = {
						AND = {
							religion_ = outlaw_group
							capital_holding = { holding_type = city }
						}
					}
				}
				ROOT = { set_government_type = pirate_republic }
			}
			if = {
				limit = {
					ROOT = {
						AND = {
							religion_ = transhumanist_group
							NOT = { religion = bio_directionist }
							OR = {
								capital_holding = { holding_type = city }
								capital_holding = { holding_type = temple }
							}
						}
					}
				}
				ROOT = { set_government_type = pc_technocratic_government }
			}
		}

		# Remove coup flags
		ROOT = { clr_character_flag = flag_failed_coup }
		FROM = { clr_character_flag = flag_failed_purge }
	}

	on_success_title = {
		usurp_title_plus_barony_if_unlanded = ROOT # Messy solution, should be cleaned up later

		# New provisional government takes office.
		if = {
			limit = { ROOT = { is_merchant_republic = no } }
			add_law = succ_feudal_elective
			add_law = true_cognatic_succession
		}
		if = {
			limit = {
				OR = {
					has_law = local_term_length_0
					has_law = local_term_length_1
					has_law = local_term_length_2
					has_law = local_term_length_3
				}
			}
			add_law = local_term_length_4
		}
	}

	on_fail = {
		# Initiator fails to achieve whatever it was they were after
		ROOT = {
			if = {
				limit = {
					has_plot = plot_coup
				}
				cancel_plot = plot_coup
			}
			if = {
				limit = {
					has_plot = plot_justified_coup
				}
				cancel_plot = plot_justified_coup
			}
		}

		# Remove coup flags
		ROOT = { clr_character_flag = flag_failed_coup }
		FROM = { clr_character_flag = flag_failed_purge }
	}

	on_reverse_demand = {
		# Ruler has won!
		FROM = { prestige = 100 }
		# Imprison all rebels
		any_attacker = { imprison = FROM }
		# Imprison all of ROOT's co-conspirators (if not rebels)
		if = {
			limit = {
				ROOT = {
					OR = {
						has_plot = plot_coup
						has_plot = plot_justified_coup
					}
					plot_target_char = { character = FROM }
				}
			}
			ROOT = {
				any_plot_backer = {
					limit = { NOT = { war_with = FROM } }
					imprison = FROM
				}
			}
		}
		# All anti-ruler vassals are automatically no longer anti-ruler
		FROM = {
			any_vassal = {
				limit = { in_faction = faction_anti_ruler }
				hidden_tooltip = {
					leave_faction = faction_anti_ruler
					#character_event = { id = laws.5 }
				}
			}
			any_courtier = {
				limit = { in_faction = faction_anti_ruler }
				hidden_tooltip = {
					leave_faction = faction_anti_ruler
					#character_event = { id = laws.5 }
				}
			}
		}
		# If FROM is in a constitutional crisis, this resolves it in their favor.
		if = {
			limit = { FROM = { has_character_modifier = constitutional_crisis } }
			FROM = { character_event = { id = laws.1000 tooltip = "EVTTOOLTIPLAWS1000" } }
		}
		# Coups fail immediately
		ROOT = {
			if = {
				limit = {
					has_plot = plot_coup
				}
				cancel_plot = plot_coup
			}
			if = {
				limit = {
					has_plot = plot_justified_coup
				}
				cancel_plot = plot_justified_coup
			}
		}

		# If FROM and ROOTs' ideologies are different, the former gets a bonus and
		# the latter takes a hit

		# Remove coup flags
		ROOT = { clr_character_flag = flag_failed_coup }
		FROM = { clr_character_flag = flag_failed_purge }
	}

	on_attacker_leader_death = {
		if = {
			limit = { ROOT = { has_character_flag = flag_failed_coup } }
			end_war = invalid
		}
	}

	on_defender_leader_death = {
		if = {
			limit = { FROM = { has_character_flag = flag_failed_purge } }
			end_war = invalid
		}
	}

	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

# Attempt to become the new regent by force
cb_seize_regency = {
	name = CB_NAME_SEIZE_REGENCY
	war_name = WAR_NAME_SEIZE_REGENCY
	sprite = 1
	truce_days = 1825
	hostile_against_others = yes
	attacker_can_call_allies = yes
	defender_can_call_allies = yes
	can_ask_to_join_war = yes
	is_permanent = yes

	on_add = { log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB cb_seize_regency." }

	can_use = {
		ROOT = { same_liege = FROM }
		FROM = { has_minor_title = title_regent }
	}

	can_use_gui = {
		ROOT = {
			liege = {
				OR = {
					religion = terran_imperial
					religion = neo_feudal
					religion = space_pirate
					NOT = { religion_authority = 0.5 }
				}
			}
		}
	}

	is_valid = {
		ROOT = { same_liege = FROM }
		FROM = { has_minor_title = title_regent }
	}

	on_success = {
		log = "[Root.GetBestName] won the cb_seize_regency war against [From.GetBestName]."
		# Take over the regency, duh
		ROOT = { give_minor_title = title_regent }

		# Imprison former regent
		FROM = { imprison = ROOT }

		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		FROM = { prestige = -100 }
	}

	on_fail = {
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			participation_scaled_prestige = 100
		}
		ROOT = { prestige = -100 }
	}

	on_reverse_demand = {
		any_attacker = {
			limit = { same_liege = FROM }
			imprison = FROM
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			participation_scaled_prestige = 100
		}
		ROOT = { prestige = -100 }
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0
			ROOT = {
				NOT = { trait = ambitious }
				opinion = { who = FROM value = 0 }
			}
		}
	}
}

democratic_rebellion = {
	name = CB_NAME_REBELLION
	war_name = WAR_NAME_REBELLION
	sprite = 7
	truce_days = 365
	hostile_against_others = yes
	attacker_can_call_allies = yes
	defender_can_call_allies = yes
	can_ask_to_join_war = yes

	can_use = { ROOT = { has_character_flag = flag_revolter } }

	is_valid = { ROOT = { has_character_flag = flag_revolter } }

	on_success = {
		log = "[Root.GetBestName] won the democratic_rebellion war against [From.GetBestName]."
		ROOT = {
			prestige = 100
			clr_character_flag = flag_revolter
			hidden_tooltip = {
				any_courtier = {
					opinion = { who = ROOT modifier = opinion_hero_of_the_revolution }
					reverse_opinion = { who = ROOT modifier = opinion_aided_my_revolution }
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = 100
			opinion = { who = ROOT modifier = opinion_hero_of_the_revolution }
			reverse_opinion = { who = ROOT modifier = opinion_aided_my_revolution }
		}
		FROM = {
			prestige = -100
			hidden_tooltip = {
				any_realm_province = {
					limit = {
						owner = { is_liege_or_above = PREVPREV }
						religion = ROOT
					}
					add_province_modifier = { name = successful_revolt days = 365 }
				}
			}
		}
		# Moral authority changes
		if = {
			limit = {
				FROM = {
					primary_title = { NOT = { higher_tier_than = duke } }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = fell_to_minor_rebellion years = 10 } }
			ROOT = {
				religion_authority = { modifier = successful_minor_rebellion years = 10 }
				piety = 100
			}
		}
		if = {
			limit = {
				FROM = {
					primary_title = { higher_tier_than = duke }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = fell_to_major_rebellion years = 60 } }
			ROOT = {
				religion_authority = { modifier = successful_major_rebellion years = 60 }
				piety = 500
			}
		}
		# Rebels establish new government, seize control
		ROOT = {
			occupy_minors_of_occupied_settlements = FROM
			gain_all_occupied_titles = FROM
			if = {
				limit = { is_government_potential = merchant_republic_government }
				set_government_type = merchant_republic_government
			}
			if = {
				limit = { religion_group = outlaw_group }
				set_government_type = pirate_republic
			}
			if = {
				limit = {
					NOT = { is_government_potential = merchant_republic_government }
					NOT = { is_government_potential = pirate_republic }
				}
				set_government_type = pc_civil_government
			}
			if = {
				limit = {
					religion_group = transhumanist_group
					NOT = { religion = bio_directionist }
				}
				set_government_type = pc_technocratic_government
			}
		}
	}

	on_add = {
		log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB democratic_rebellion."
		# Downgrade FROM's public order
		#FROM = {
		#	any_demesne_title = { limit = { has_law = public_order_1 } }
		#	add_law = public_order_0
		#}
	}

	on_fail = {
		ROOT = { clr_character_flag = flag_revolter }
		FROM = {
			prestige = 100
			hidden_tooltip = { opinion = { modifier = opinion_rebel_traitor  who = ROOT months = 1200 } }
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = -100
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = opinion_traitor months = 240 } }
		}
		ROOT = {
			imprison = FROM
			hidden_tooltip = { add_character_modifier = { name = broken_spirit days = -1 } }
		}
	}

	on_reverse_demand = {
		ROOT = { clr_character_flag = flag_revolter }
		# Moral authority changes
		if = {
			limit = {
				FROM = {
					primary_title = { NOT = { higher_tier_than = duke } }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = crushed_minor_rebellion years = 10 } }
			ROOT = { religion_authority = { modifier = failed_minor_rebellion years = 10 } }
		}
		if = {
			limit = {
				FROM = {
					primary_title = { higher_tier_than = duke }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = crushed_major_rebellion years = 60 } }
			ROOT = { religion_authority = { modifier = failed_major_rebellion years = 60 } }
		}
		FROM = {
			prestige = 200
			hidden_tooltip = {
				opinion = { modifier = opinion_rebel_traitor  who = ROOT months = 1200 }
				add_character_modifier = { name = crushed_revolt days = 3650 }
				any_realm_province = {
					limit = {
						any_province_lord = { character = FROM }
						OR = {
							religion = terran_republican
							religion = terran_federalist
							religion = colonial_separatist
							owner = { is_civil_trigger = yes }
						}
					}
					add_province_modifier = { name = "failed_revolt" days = 3650 }
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = -100
			imprison = FROM
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = opinion_traitor months = 240 } }
		}
		ROOT = {
			imprison = FROM
			hidden_tooltip = { add_character_modifier = { name = broken_spirit days = -1 } }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

autocratic_rebellion = {
	name = CB_NAME_REBELLION
	war_name = WAR_NAME_REBELLION
	sprite = 7
	truce_days = 365
	hostile_against_others = yes
	attacker_can_call_allies = yes
	defender_can_call_allies = yes
	can_ask_to_join_war = yes

	can_use = { ROOT = { has_character_flag = flag_revolter } }

	is_valid = { ROOT = { has_character_flag = flag_revolter } }

	on_success = {
		log = "[Root.GetBestName] won the autocratic_rebellion war against [From.GetBestName]."
		ROOT = {
			prestige = 100
			clr_character_flag = flag_revolter
			hidden_tooltip = {
				any_courtier = {
					opinion = { who = ROOT modifier = opinion_hero_of_the_revolution }
					reverse_opinion = { who = ROOT modifier = opinion_aided_my_revolution }
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = 100
			opinion = { who = ROOT modifier = opinion_hero_of_the_revolution }
			reverse_opinion = { who = ROOT modifier = opinion_aided_my_revolution }
		}
		FROM = {
			prestige = -100
			hidden_tooltip = {
				any_realm_province = {
					limit = {
						owner = { is_liege_or_above = PREVPREV }
						religion = ROOT
					}
					add_province_modifier = { name = successful_revolt days = 365 }
				}
			}
			# Set autocratic legitimacy
			any_demesne_title = {
				limit = { is_primary_holder_title_tier = yes }
				add_law = military_vassal_legitimacy_0
			}
		}
		# Moral authority changes
		if = {
			limit = {
				FROM = {
					primary_title = { NOT = { higher_tier_than = duke } }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = fell_to_minor_rebellion years = 10 } }
			ROOT = {
				religion_authority = { modifier = successful_minor_rebellion years = 10 }
				piety = 100
			}
		}
		if = {
			limit = {
				FROM = {
					primary_title = { higher_tier_than = duke }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = fell_to_major_rebellion years = 60 } }
			ROOT = {
				religion_authority = { modifier = successful_major_rebellion years = 60 }
				piety = 500
			}
		}
		# Rebels establish new government, seize control
		ROOT = {
			occupy_minors_of_occupied_settlements = FROM
			gain_all_occupied_titles = FROM
			if = {
				limit = { religion = space_pirate }
				set_government_type = pirate_kingdom
			}
			if = {
				limit = {
					religion = neo_feudal
				}
				set_government_type = neofeudal_government
			}
			if = {
				limit = {
					religion = imperial_cult
				}
				set_government_type = pc_theocratic_government
			}
			if = {
				limit = {
					NOR = {
						religion_group = outlaw_group
						religion = neo_feudal
						religion = imperial_cult
					}
				}
				set_government_type = military_government
			}
		}
	}

	on_add = {
		log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB autocratic_rebellion."
		# Downgrade FROM's public order
		#FROM = {
		#	any_demesne_title = { limit = { has_law = public_order_1 } }
		#	add_law = public_order_0
		#}
	}

	on_fail = {
		ROOT = { clr_character_flag = flag_revolter }
		FROM = {
			prestige = 100
			hidden_tooltip = { opinion = { modifier = opinion_rebel_traitor  who = ROOT months = 1200 } }
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = -100
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = opinion_traitor months = 240 } }
		}
		ROOT = {
			imprison = FROM
			hidden_tooltip = { add_character_modifier = { name = broken_spirit days = -1 } }
		}
	}

	on_reverse_demand = {
		ROOT = { clr_character_flag = flag_revolter }
		# Moral authority changes
		if = {
			limit = {
				FROM = {
					primary_title = { NOT = { higher_tier_than = duke } }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = crushed_minor_rebellion years = 10 } }
			ROOT = { religion_authority = { modifier = failed_minor_rebellion years = 10 } }
		}
		if = {
			limit = {
				FROM = {
					primary_title = { higher_tier_than = duke }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = crushed_major_rebellion years = 60 } }
			ROOT = { religion_authority = { modifier = failed_major_rebellion years = 60 } }
		}
		FROM = {
			prestige = 200
			hidden_tooltip = {
				opinion = { modifier = opinion_rebel_traitor  who = ROOT months = 1200 }
				add_character_modifier = { name = crushed_revolt days = 3650 }
				any_realm_province = {
					limit = {
						any_province_lord = { character = FROM }
						OR = {
							religion = terran_imperial
							religion = astrist
							religion = neo_feudal
							owner = { is_military_trigger = yes }
						}
					}
					add_province_modifier = { name = "failed_revolt" days = 3650 }
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = -100
			imprison = FROM
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = opinion_traitor months = 240 } }
		}
		ROOT = {
			imprison = FROM
			hidden_tooltip = { add_character_modifier = { name = broken_spirit days = -1 } }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

theocratic_rebellion = {
	name = CB_NAME_REBELLION
	war_name = WAR_NAME_REBELLION
	sprite = 7
	truce_days = 365
	hostile_against_others = yes
	attacker_can_call_allies = yes
	defender_can_call_allies = yes
	can_ask_to_join_war = yes

	can_use = { ROOT = { has_character_flag = flag_revolter } }

	is_valid = { ROOT = { has_character_flag = flag_revolter } }

	on_success = {
		log = "[Root.GetBestName] won the theocratic_rebellion war against [From.GetBestName]."
		ROOT = {
			prestige = 100
			clr_character_flag = flag_revolter
			hidden_tooltip = {
				any_courtier = {
					opinion = { who = ROOT modifier = opinion_hero_of_the_revolution }
					reverse_opinion = { who = ROOT modifier = opinion_aided_my_revolution }
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = 100
			opinion = { who = ROOT modifier = opinion_hero_of_the_revolution }
			reverse_opinion = { who = ROOT modifier = opinion_aided_my_revolution }
		}
		FROM = {
			prestige = -100
			hidden_tooltip = {
				any_realm_province = {
					limit = {
						owner = { is_liege_or_above = PREVPREV }
						religion = ROOT
					}
					add_province_modifier = { name = successful_revolt days = 365 }
				}
			}
		}
		# Moral authority changes
		if = {
			limit = {
				FROM = {
					primary_title = { NOT = { higher_tier_than = duke } }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = fell_to_minor_rebellion years = 10 } }
			ROOT = {
				religion_authority = { modifier = successful_minor_rebellion years = 10 }
				piety = 100
			}
		}
		if = {
			limit = {
				FROM = {
					primary_title = { higher_tier_than = duke }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = fell_to_major_rebellion years = 60 } }
			ROOT = {
				religion_authority = { modifier = successful_major_rebellion years = 50 }
				piety = 500
			}
		}
		ROOT = {
			occupy_minors_of_occupied_settlements = FROM
			gain_all_occupied_titles = FROM
			if = {
				limit = {
					religion_group = transhumanist_group
					NOT = { religion = bio_directionist }
				}
				set_government_type = pc_technocratic_government
			}
			if = {
				limit = {
					OR = {
						religion = bio_directionist
						NOT = { religion_group = transhumanist_group }
					}
				}
				set_government_type = pc_rectorial_government
			}
		}
	}

	on_add = {
		log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB theocratic_rebellion."
		# Downgrade FROM's public order
		#FROM = {
		#	any_demesne_title = { limit = { has_law = public_order_1 } }
		#	add_law = public_order_0
		#}
		#FROM = {
		#	any_demesne_title = { limit = { has_law = public_order_2 } }
		#	add_law = public_order_1
		#}
	}

	on_fail = {
		ROOT = { clr_character_flag = flag_revolter }
		FROM = {
			prestige = 100
			hidden_tooltip = { opinion = { modifier = opinion_rebel_traitor  who = ROOT months = 1200 } }
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = -100
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = opinion_traitor months = 240 } }
		}
		ROOT = {
			imprison = FROM
			hidden_tooltip = { add_character_modifier = { name = broken_spirit days = -1 } }
		}
	}

	on_reverse_demand = {
		ROOT = { clr_character_flag = flag_revolter }
		# Moral authority changes
		if = {
			limit = {
				FROM = {
					primary_title = { NOT = { higher_tier_than = duke } }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = crushed_minor_rebellion years = 10 } }
			ROOT = { religion_authority = { modifier = failed_minor_rebellion years = 10 } }
		}
		if = {
			limit = {
				FROM = {
					primary_title = { higher_tier_than = duke }
					NOT = { religion = ROOT }
				}
			}
			FROM = { religion_authority = { modifier = crushed_major_rebellion years = 60 } }
			ROOT = { religion_authority = { modifier = failed_major_rebellion years = 60 } }
		}
		FROM = {
			prestige = 200
			hidden_tooltip = {
				opinion = { modifier = opinion_rebel_traitor  who = ROOT months = 1200 }
				add_character_modifier = { name = crushed_revolt days = 3650 }
				any_realm_province = {
					limit = {
						any_province_lord = { character = FROM }
						OR = {
							religion = neo_socialist
							religion = orthodox
							religion = machine_cultist
							owner = { is_rectorial_trigger = yes }
						}
					}
					add_province_modifier = { name = "failed_revolt" days = 3650 }
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			participation_scaled_prestige = -100
			imprison = FROM
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = opinion_traitor months = 240 } }
		}
		ROOT = {
			imprison = FROM
			hidden_tooltip = { add_character_modifier = { name = broken_spirit days = -1 } }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

# DAMN YOU PARADOX
cb_historical_independence_revolt = {
	name = CB_NAME_INDEPENDENCE
	war_name = WAR_NAME_FACTION_INDEPENDENCE
	sprite = 12
	truce_days = 3650
	hostile_against_others = no

	can_use = {
		ROOT = {
			has_character_flag = flag_historical_independence_revolt_leader
			NOT = { any_war = { using_cb = cb_historical_independence_revolt } }
		}
	}

	on_add = {
		log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB cb_historical_independence."
		ROOT = { clr_character_flag = flag_historical_independence_revolt_leader }
	}

	is_valid = {
		ROOT = {
			OR = {
				independent = yes
				same_liege = FROM
			}
			OR = {
				liege = { character = PREV } # either independent
				liege = { FROM = { is_liege_or_above = PREV } } # or have shared liege
			}
		}
		FROM = {
			any_demesne_title = {
				NOT = { lower_tier_than = ROOT }
				temporary = no
			}
			independent = yes
		}
	}

	on_success = {
		log = "[Root.GetBestName] won the cb_historical_independence_revolt war against [From.GetBestName]."
		hidden_tooltip = { ROOT = { clr_character_flag = flag_historical_independence_revolt_leader } }
		any_attacker = {
			if = {
				limit = {
					OR = {
						real_tier = emperor
						real_tier = king
					}
				}
				FROM = { religion_authority = { modifier = fell_to_major_rebellion years = 60 } }
				religion_authority = { modifier = successful_major_rebellion years = 60 }
			}
			if = {
				limit = {
					OR = {
						real_tier = duke
						real_tier = count
						real_tier = baron
					}
				}
				FROM = { religion_authority = { modifier = fell_to_minor_rebellion years = 10 } }
				religion_authority = { modifier = successful_minor_rebellion years = 10 }
			}
		}
		any_attacker = {
			set_defacto_liege = THIS
			hidden_tooltip = {
				participation_scaled_prestige = 100
				disband_event_forces = faction_revolters
				any_demesne_title = { add_weak_pressed_claim = FROM }
			}
		}
		FROM = {

			hidden_tooltip = { disband_event_forces = faction_loyalists }

			any_demesne_title = { # All titles
				limit = {
					OR = {
						tier = king
						tier = emperor
					}
					NOT = { has_law = centralization_0 }
				}
				if = {
					limit = { has_law = centralization_1 }
					add_law = centralization_0
				}
				if = {
					limit = { has_law = centralization_2 }
					add_law = centralization_1
				}
				if = {
					limit = { has_law = centralization_3 }
					add_law = centralization_2
				}
				if = {
					limit = { has_law = centralization_4 }
					add_law = centralization_3
				}
			}
		}

		# Eliminate the Infinite Money Property if present
		# hidden_tooltip = { any_attacker = { character_event = { id = maintenance.550 } } }
	}

	on_fail = {
		hidden_tooltip = { ROOT = { clr_character_flag = flag_historical_independence_revolt_leader } }
		ROOT = {
			prestige = -50
			#prisoner = FROM
			add_character_modifier = {
				name = faction_independence_ultimatum_timer
				hidden = yes
				duration = 3650
			}
			hidden_tooltip = { disband_event_forces = faction_revolters }
		}
		any_attacker = {
			limit = { character = ROOT }
			set_defacto_liege = FROM
			participation_scaled_prestige = -50
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			set_defacto_liege = FROM
			hidden_tooltip = {
				participation_scaled_prestige = -50
				disband_event_forces = faction_revolters
			}
			add_character_modifier = {
				name = faction_independence_ultimatum_timer
				hidden = yes
				duration = 3650
			}
		}
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}

	on_reverse_demand = {
		hidden_tooltip = { ROOT = { clr_character_flag = flag_historical_independence_revolt_leader } }
		ROOT = {
			prestige = -100
			set_defacto_liege = FROM
			prisoner = FROM
			add_character_modifier = {
				name = faction_independence_ultimatum_timer
				hidden = yes
				duration = 3650
			}
			hidden_tooltip = { disband_event_forces = faction_revolters }
		}

		any_attacker = {
			limit = { character = ROOT }
			set_defacto_liege = FROM
			participation_scaled_prestige = -100
			if = {
				limit = {
					OR = {
						real_tier = emperor
						real_tier = king
					}
				}
				FROM = { religion_authority = { modifier = crushed_major_rebellion years = 60 } }
				religion_authority = { modifier = failed_major_rebellion years = 60 }
			}
			if = {
				limit = {
					OR = {
						real_tier = duke
						real_tier = count
						real_tier = baron
					}
				}
				FROM = { religion_authority = { modifier = crushed_minor_rebellion years = 10 } }
				religion_authority = { modifier = failed_minor_rebellion years = 10 }
			}
		}

		any_attacker = {
			limit = { NOT = { character = ROOT } }
			set_defacto_liege = FROM
			if = {
				limit = {
					OR = {
						real_tier = emperor
						real_tier = king
					}
				}
				FROM = { religion_authority = { modifier = crushed_major_rebellion years = 60 } }
				religion_authority = { modifier = failed_major_rebellion years = 60 }
			}
			if = {
				limit = {
					OR = {
						real_tier = duke
						real_tier = count
						real_tier = baron
					}
				}
				FROM = { religion_authority = { modifier = crushed_minor_rebellion years = 10 } }
				religion_authority = { modifier = failed_minor_rebellion years = 10 }
			}
			prisoner = FROM
			participation_scaled_prestige = -100
			hidden_tooltip = {
				disband_event_forces = faction_revolters
				add_character_modifier = {
					name = faction_independence_ultimatum_timer
					hidden = yes
					duration = 3650
				}
			}
		}

		FROM = {
			prestige = 50
			hidden_tooltip = { disband_event_forces = faction_loyalists }
		}
	}

	# on_attacker_leader_death = {
		# hidden_tooltip = { any_defender = { letter_event = { id = 251 } } }

		# end_war = invalid
	# }

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 150
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

county_conquest = {
	name = CB_NAME_COUNTY_CONQUEST
	war_name = WAR_NAME_COUNTY_CONQUEST
	sprite = 16
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no

	allow_distant = yes

	can_use = {
		ROOT = {
			NOT = { same_realm = FROM }

		}
	}
	can_use_gui = {
		ROOT = {
			prestige = 100
			OR = {
				religion = terran_imperial
				religion = astrist
				religion = neo_feudal
				religion_group = outlaw_group
			}
		}
	}
	can_use_title = {
		tier = count
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = {
				is_liege_or_above = FROM
				NOT = { same_realm = ROOT }
			}
		}

		NOT = {
			OR = {
				ROOT = { has_landed_title = PREV }
				holder_scope = { is_liege_or_above = ROOT }
			}
		}

		OR = {
			ROOT = { religion_group = outlaw_group }
			location = {
				any_neighbor_province = {
					owner = {
						OR = {
							character = ROOT
							is_liege_or_above = ROOT
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = {
				is_liege_or_above = FROM
				NOT = { same_realm = ROOT }
			}
		}

		NOT = {
			OR = {
				ROOT = { has_landed_title = PREV }
				holder_scope = { is_liege_or_above = ROOT }
			}
		}

		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_add = {
		ROOT = { show_scope_change = no prestige = -100 }
		log = "[Root.GetBestName] declared war on [From.GetBestName] using the CB county_conquest."
	}

	on_success_title = {
		log = "[Root.GetBestName] won the county_conquest war against [From.GetBestName]."
		usurp_title_plus_barony_if_unlanded = ROOT

		any_de_jure_vassal_title = { # take all baronies too
			limit = {
				has_holder = yes
				holder_scope = {
					OR = {
						character = FROM
						is_liege_or_above = FROM
						AND = {
							is_liege_or_above = ROOT
							NOT = { culture_group = ROOT }
							NOT = { religion = ROOT }
						}
					}
				}
			}

			usurp_title = ROOT
		}

		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 50
			}
		}

		ROOT = {
			if = {
				limit = { NOT = { religion = FROM } }
				religion_authority = { modifier = won_county_conquest }
			}
		}
	}

	on_fail_title = {
		ROOT = {
			prestige = -100
			if = {
				limit = { NOT = { religion = FROM } }
				religion_authority = { modifier = lost_county_conquest }
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			if = {
				limit = { NOT = { religion = FROM } }
				religion_authority = { modifier = lost_county_conquest }
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 50
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
warlord_conquest = {
	name = CB_NAME_WARLORD_CONQUEST
	war_name = WAR_NAME_WARLORD_CONQUEST
	sprite = 38
	truce_days = 3650
	hostile_against_others = yes
	full_hostility = yes
	can_ask_to_join_war = yes
	attacker_can_call_allies = no
	defender_can_call_allies = yes
	is_permanent = yes
	check_de_jure_tier = KING
	is_holy_war = yes
	#check_all_titles = yes

	sort_priority = 1500

	can_use = {
		ROOT = {
			#CB Specific Traits and things
			OR = {
				trait = warlord
				has_ambition = obj_warlord
			}
			NOT = { same_realm = FROM }
		}
	}

	can_use_gui = {
		ROOT = {
			OR = {
				trait = warlord
				has_ambition = obj_warlord
			}
			NOT = { trait = incapable }
		}
	}

	can_use_title = {
		# The attacker needs at least one county in the target kingdom, or a border, or be only one space zone away from one of your counties
		any_direct_de_jure_vassal_title = {
			OR = {
				holder_scope = {
					OR = {
						character = ROOT
						is_liege_or_above = ROOT
					}
				}
				location = {
					any_neighbor_province = {
						OR = {
							AND = {
								has_owner = yes
								owner = {
									OR = {
										character = ROOT
										is_liege_or_above = ROOT
									}
								}
							}
							AND = {
								is_land = no
								any_neighbor_province = {
									has_owner = yes
									owner = {
										OR = {
											character = ROOT
											is_liege_or_above = ROOT
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		FROM = {
			any_realm_title = {
				de_jure_liege_or_above = PREVPREV
			}
		}
	}

	on_success = {
		#Ambition and Prestige Handling
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		if = {
			limit = { ROOT = { has_ambition = obj_warlord } }
			ROOT = { set_character_flag = warlord_flg }
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}

		hidden_tooltip = {
			ROOT = {
				#occupy_minors_of_occupied_settlements = FROM #Needs to be changed
				#gain_all_occupied_titles = FROM #Needs to be changed

				if = {
					limit = {
						has_nickname = no
					}
					random_list = {
						10 = { give_nickname = nick_the_great }
						10 = { give_nickname = nick_the_victorious }
						10 = { give_nickname = nick_the_bold }
						10 = { give_nickname = nick_the_conqueror }
					}
				}

				if = {
					limit = {
						has_nickname = nick_the_bastard
					}
					give_nickname = nick_the_conqueror
				}
			}
		}

		FROM = {
			prestige = -200
		}
	}

	on_success_title = {
		custom_tooltip = {
			text = pagan_subjugation_tip
			hidden_tooltip = {
				ROOT = {
					subjugate_or_take_under_title = { # If the target only has territory within the kingdom, he is simply vassalized
						title = PREV
						enemy = FROM
					}
				}
			}
		}
	}


	on_fail = {
		FROM = {
			piety = 50
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		ROOT = {
			piety = -100
			prestige = -100
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			piety = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 5.0
			}
		}
		FROM = {
			piety = 100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_attacker_leader_death = {
		hidden_tooltip = {
			any_defender = {
				letter_event = {
					id = 251
				}
			}
		}
		end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = 100
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

crisis_cb = {
	name = CB_NAME_INDEPENDENCE
	war_name = WAR_NAME_INDEPENDENCE
	sprite = 12
	truce_days = 3650

	is_permanent = no
	is_independence = yes
	attacker_can_call_allies = yes
	defender_can_call_allies = yes
	can_ask_to_join_war = yes
	can_call_vassals = yes
	major_revolt = yes
	is_holy_war = yes

	att_ticking_war_score_multiplier = 0.1
	def_ticking_war_score_multiplier = 0.05

	max_defender_occupation_score = 70
	max_attacker_occupation_score = 70

	capturing_attacker_is_complete_victory = no
	capturing_defender_is_complete_victory = no

	attacker_unoccupied_warscore = yes
	defender_unoccupied_warscore = yes

	apply_short_occ_mod = no

	attacker_alliance_occ_warscore = yes

	can_use = {
		always = no
	}

	is_valid = {
		ROOT = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = {
					FROM = {
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
		}
		FROM = {
			any_demesne_title = {
				NOT = { lower_tier_than = ROOT }
				temporary = no
			}
			in_revolt = no
			liege_before_war = {
				in_revolt = no
				liege_before_war = {
					in_revolt = no
				}
			}
			# No independence factions in merchant republics
			#NOT = {
			#	AND = {
			#		is_merchant_republic = yes
			#		liege_before_war = {
			#			is_merchant_republic = yes
			#		}
			#	}
			#}
		}
	}

	on_add = {
		ROOT = {
			#add_character_modifier = {
			#	name = "indep_war"
			#	duration = 100
			#}
		}
		event_target:chronicle_player = {
			if = {
				limit = { character = ROOT }
				chronicle = {
					entry = CHRONICLE_WAR_INDEPENDENCE_ATTACKER
					portrait = [From.GetID]
				}
				break = yes
			}
			if = {
				limit = { character = FROM }
				chronicle = {
					entry = CHRONICLE_WAR_INDEPENDENCE_DEFENDER
					portrait = [Root.GetID]
				}
				break = yes
			}
			if = {
				limit = { is_liege_or_above = ROOT }
				chronicle = {
					entry = CHRONICLE_WAR_INDEPENDENCE_ATTACKER_LIEGE
					portrait = [Root.GetID]
				}
				break = yes
			}
			if = {
				limit = { is_liege_or_above = FROM }
				chronicle = {
					entry = CHRONICLE_WAR_INDEPENDENCE_DEFENDER_LIEGE
					portrait = [From.GetID]
				}
			}
		}
	}

	on_success = {
		any_character = {
			narrative_event = { id = narrative.100 days = 2 }
		}
		any_playable_ruler = {
			limit = {
				is_vassal_or_below_of = FROM
			}
			narrative_event = { id = narrative.200 days = 70 }
		}
		FROM = {
			narrative_event = { id = narrative.200 days = 70 }
		}
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
			set_global_flag = crisis_over
			set_global_flag = crisis_rebel_win
		}
		if = {
			limit = {
				FROM = {
					independent = no
				}
			}
			FROM = {
				if = {
					limit = {
						in_revolt = yes
					}
					liege_before_war = {
						ROOT = {
							set_defacto_liege = PREV
						}
					}
				}
				if = {
					limit = {
						in_revolt = no
					}
					liege = {
						ROOT = {
							set_defacto_liege = PREV
						}
					}
				}
			}
		}

		if = {
			limit = {
				FROM = {
					independent = yes
				}
			}
			ROOT = {
				set_defacto_liege = ROOT
			}
		}

		ROOT = {
			#prestige = 100
			any_demesne_title = {
				limit = {
					tier = ROOT
					controls_religion = no
					NOT = {
						dejure_liege_title = {
							OR = {
								FROM = { has_landed_title = PREV }
								dejure_liege_title = {
									OR = {
										FROM = { has_landed_title = PREV }
										dejure_liege_title = { FROM = { has_landed_title = PREV } }
									}
								}
							}
						}
					}
				}
				add_weak_pressed_claim = FROM
			}
		}
		hidden_tooltip = {
			ROOT = {
				prestige = 100
				any_demesne_title = {
					add_pressed_claim = FROM
				}
				set_character_flag = ai_flag_never_transfer
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				if = {
					limit = {
						FROM = { tier = EMPEROR }
						OR = {
							liege_before_war = { character = FROM }
							is_liege_or_above = FROM
						}
					}
					set_defacto_liege = THIS
				}
			}
		}
	}

	on_fail = { ##yes, its spaghetti code - but they have to be released before being re-vassalised or weird bugs occur
		hidden_tooltip = {
			set_global_flag = crisis_over
			set_global_flag = crisis_draw
		}
		any_character = {
			narrative_event = { id = narrative.101 days = 2 }
		}
		any_playable_ruler = {
			limit = {
				is_vassal_or_below_of = FROM
			}
			narrative_event = { id = narrative.200 days = 70 }
		}
		FROM = {
			narrative_event = { id = narrative.200 days = 70 }
		}
		ROOT = {
			#prestige = -100
			clr_character_flag = post_civil_war_indep_war
			clr_character_flag = indep_war
		}
		ROOT = {
			participation_scaled_prestige = -50
		}
		if = {
			limit = {
				FROM = {
					independent = no
				}
			}
			FROM = {
				if = {
					limit = {
						in_revolt = yes
					}
					liege_before_war = {
						ROOT = {
							set_defacto_liege = PREV
						}
					}
				}
				if = {
					limit = {
						in_revolt = no
					}
					liege = {
						ROOT = {
							set_defacto_liege = PREV
						}
					}
				}
			}
		}

		if = {
			limit = {
				FROM = {
					independent = yes
				}
			}
			ROOT = {
				set_defacto_liege = ROOT
			}
		}

		ROOT = {
			#prestige = 100
			any_demesne_title = {
				limit = {
					tier = ROOT
					controls_religion = no
					NOT = {
						dejure_liege_title = {
							OR = {
								FROM = { has_landed_title = PREV }
								dejure_liege_title = {
									OR = {
										FROM = { has_landed_title = PREV }
										dejure_liege_title = { FROM = { has_landed_title = PREV } }
									}
								}
							}
						}
					}
				}
				add_weak_pressed_claim = FROM
			}
		}
		hidden_tooltip = {
			ROOT = {
				prestige = 100
				any_demesne_title = {
					add_pressed_claim = FROM
				}
				set_character_flag = ai_flag_never_transfer
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				if = {
					limit = {
						FROM = { tier = EMPEROR }
						OR = {
							liege_before_war = { character = FROM }
							is_liege_or_above = FROM
						}
					}
					set_defacto_liege = THIS
				}
			}
		}
		k_jion = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
		k_tarka = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
	}

	on_reverse_demand = { ##yes, its spaghetti code - but they have to be released before being re-vassalised or weird bugs occur
		hidden_tooltip = {
			set_global_flag = crisis_over
			set_global_flag = crisis_confed_win
			any_character = {
				narrative_event = { id = narrative.102 days = 2 }
			}
			any_playable_ruler = {
				limit = {
					is_vassal_or_below_of = FROM
				}
				narrative_event = { id = narrative.200 days = 70 }
			}
			FROM = {
				narrative_event = { id = narrative.200 days = 70 }
			}
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = {
						ROOT = {
							OR = {
								higher_tier_than = DUKE
								relative_power_including_allies_attacker = { who = PREV power = 0.3 }
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				FROM = {
					independent = no
				}
			}
			FROM = {
				if = {
					limit = {
						in_revolt = yes
					}
					liege_before_war = {
						ROOT = {
							set_defacto_liege = PREV
						}
					}
				}
				if = {
					limit = {
						in_revolt = no
					}
					liege = {
						ROOT = {
							set_defacto_liege = PREV
						}
					}
				}
			}
		}

		if = {
			limit = {
				FROM = {
					independent = yes
				}
			}
			ROOT = {
				set_defacto_liege = ROOT
			}
		}

		ROOT = {
			#prestige = 100
			any_demesne_title = {
				limit = {
					tier = ROOT
					controls_religion = no
					NOT = {
						dejure_liege_title = {
							OR = {
								FROM = { has_landed_title = PREV }
								dejure_liege_title = {
									OR = {
										FROM = { has_landed_title = PREV }
										dejure_liege_title = { FROM = { has_landed_title = PREV } }
									}
								}
							}
						}
					}
				}
				add_weak_pressed_claim = FROM
			}
		}
		hidden_tooltip = {
			ROOT = {
				prestige = 100
				any_demesne_title = {
					add_pressed_claim = FROM
				}
				set_character_flag = ai_flag_never_transfer
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				if = {
					limit = {
						FROM = { tier = EMPEROR }
						OR = {
							liege_before_war = { character = FROM }
							is_liege_or_above = FROM
						}
					}
					set_defacto_liege = THIS
				}
			}
		}
		ROOT = {
			#prestige = -100
			clr_character_flag = post_civil_war_indep_war
			clr_character_flag = indep_war
		}
		ROOT = { imprison = FROM clr_character_flag = captured_in_battle }
		ROOT = {
			participation_scaled_prestige = -100
		}
		k_bianjiang = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
		k_jion = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
		k_orion_reach = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
		k_tarka = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
		k_new_frontier = {
			holder_scope = {
				set_defacto_liege = FROM
				de_jure_liege = FROM
			}
		}
		FROM = {
			prestige = 500
		}
	}

	on_attacker_leader_death = {
		if = {
			limit = {
				ROOT = { current_heir = { character = FROM } }
			}
			any_defender = {
				letter_event = {
					id = 251
				}
			}
			ROOT = {
				if = {
					limit = {
						higher_tier_than = KING
					}

					any_demesne_title = {
						limit = { tier = EMPEROR }
						destroy_landed_title = ROOT
					}
				}
			}
			end_war = invalid
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 1000
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 200
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1
	}
}

confed_reconquest = {
	name = CB_NAME_IMPERIAL
	war_name = WAR_NAME_IMPERIAL
	sprite = 17
	truce_days = 730
	is_permanent = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes

	allowed_to_target_tributaries = no

	sort_priority = 1900

	#can_use_gui = {
		#has_global_flag = confed_anarchy_active
		#check_if_crusader_trigger = yes
		#always = yes
	#}

	can_use = {
		has_global_flag = confed_anarchy_active
		ROOT = {
			independent = yes
			OR = {
				religion_group = political_terran_group
				religion_group = religious_terran_group
			}
			NOT = { same_realm = FROM }
			mercenary = no
			OR = {
				e_terran_confederation = { de_jure_vassal_or_below = ROOT }
				primary_title = { title = e_terran_confederation }
				has_landed_title = d_terran_imperial_head
				has_landed_title = d_terran_augustus_emperor
			}
		}
	}

	can_use_title = {
		de_jure_liege_or_above = e_terran_confederation
		#always = yes
	}

	is_valid = {
		ROOT = {
			independent = yes
			OR = {
				religion_group = political_terran_group
				religion_group = religious_terran_group
			}
			NOT = { same_realm = FROM }
			mercenary = no
			OR = {
				e_terran_confederation = { de_jure_vassal_or_below = ROOT }
				primary_title = { title = e_terran_confederation }
				has_landed_title = d_terran_imperial_head
				has_landed_title = d_terran_augustus_emperor
			}
		}
	}

	is_valid_title = {
		de_jure_liege_or_above = e_terran_confederation
		#always = yes
	}

	on_add = {
	}

	on_success = {
		ROOT = {
			participation_scaled_prestige = 100
			participation_scaled_piety = 100
			reconquest_of_terran_territory_authority_effect = yes
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 100
			}
		}

		FROM = { prestige = -100 }
		FROM = { piety = -100 }
		FROM = { religion_authority = { modifier = reconquest_of_terra_loser_ideology } }
	}

	on_success_title = {
		custom_tooltip = {
			text = other_invasion_succ_tip
			hidden_tooltip = {
				ROOT = {
					vassalize_or_take_under_title = {
						title = PREV
						enemy = FROM
						type = invasion
					}
				}
			}
		}
		if = {
			limit = {
				holder_scope = { character = FROM }
			}
			usurp_title_only = { target = ROOT type = invasion }
		}
	}

	on_fail = {
		ROOT = { prestige = -150 }
	}

	on_reverse_demand = {
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			ROOT = { prestige = -200 piety = -200 }
		}
		FROM = {
			participation_scaled_piety = 100
			participation_scaled_prestige = 200
			if = {
				limit = {
					uses_decadence = yes
				}
				participation_scaled_decadence = -10
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = {
				participation_scaled_piety = 100
				participation_scaled_prestige = 200
				if = {
					limit = {
						uses_decadence = yes
					}
					participation_scaled_decadence = -10
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
